
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>SensorHub</title>
</head>
<body>

<link href="design.css" rel="stylesheet">


<div id="myModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <p id="modalText">Some text in the Modal..</p>
  </div>
</div>

<div>
	<h1>SensorHub</h1>
</div>
<pre id="json"></pre>
<form class="border" method="get" action="update.cgi" name="numberform" id="formID">
	<div>
		<span id=ADC>
			<b>ADC</b>
		</span>

		<input type="checkbox" id="adcButton" name="adc">
		<input type="range" min="200" max="2000" value="1" class="slider" id="adcRange" disabled="true" step="20" name="adcTime">
		<output id="adcOutput" for="volume"></output>
	</div>
	<br>
	<div>
		<span id=GPIO>
			<b>GPIO</b>
		</span>
		<input type="checkbox" id="gpioRxButton" name="gpioRx">RX
		<input type="checkbox" id="gpioTxButton" name="gpioTx">TX		
	</div>
	<br>
	<div>
		<span id=UART>
			<b>UART</b>
		</span>
		<input type="checkbox" id="uartButton" name="uartTx">TX
		<input type="checkbox" id="uartButton" name="uartRx">RX
	</div>
	<br>
	<div>
		<span id=CAN>
			<b>CAN</b>
		</span>
		<input type="checkbox" id="canButton" name="canTx">TX
		<input type="checkbox" id="canButton" name="canRx">RX		
	</div>
	<br>
	<div>
		<span id=SPI>
			<b>SPI</b>
		</span>
		<input type="checkbox" id="spiButton" name="spiTx">TX
		<input type="checkbox" id="spiButton" name="spiRx">RX
	</div>
	<br>
	<div>
		<span id=I2C>
			<b>I2C</b>
		</span>
		<input type="checkbox" id="i2cButton" name="i2cTx">TX
		<input type="checkbox" id="i2cButton" name="i2cRx">RX
	</div>
	<br>
	<div>
		<input type="submit" value="submit">
		<button form="formID" form="text" type="reset">reset</button>
	</div>
</form>
<br>
<form class="border"  method="get" action="connect.cgi" name="numberform" id="formID2">
	<div>
		<b>Brocker IP </b>
		<input required pattern="^([0-9]{1,3}\.){3}[0-9]{1,3}$" name="ip">
	</div>
	<br>
	<div>
		<input type="submit" value="connect to brocker">
		<button form="formID2" form="text" type="reset">reset</button>
	</div>
</form>
<br>

<div class="border">
	<form method="get" action="disconnect.cgi" name="numberform" id="fromID3" style="display: inline;">
		<div>
			<b>Connected to:</b> <!--#IP-->
		</div>
		<br>
			<input type="submit" value="disconnect from brocker">
	</form>
	<button onClick="window.location.reload();">refresh</button>
</div>


<script> 
	var adcSlider = document.getElementById("adcRange");
	var adcOutput = document.getElementById("adcOutput");
	var adcButton = document.getElementById("adcButton");


	var modal = document.getElementById("myModal");
	var span = document.getElementsByClassName("close")[0];

	let ADC = document.getElementById("ADC");
	let GPIO = document.getElementById("GPIO");
	let UART = document.getElementById("UART");
	let CAN = document.getElementById("CAN");
	let I2C = document.getElementById("I2C");

	ADC.onclick = function(evt) {
		modal.style.display = "block";
		document.getElementById("modalText").innerHTML = "Topic: SensorHub/ADC Message: string"
	}


	GPIO.onclick = function(evt) {
		modal.style.display = "block";
		document.getElementById("modalText").innerHTML = "Topic: SensorHub/GPIO Message: string"
	}

	UART.onclick = function(evt) {
		modal.style.display = "block";
		document.getElementById("modalText").innerHTML = "Topic: SensorHub/UART Message: string"
	}

	CAN.onclick = function(evt) {
		modal.style.display = "block";
		document.getElementById("modalText").innerHTML = "Topic: SensorHub/CAN Message: string"
	}

	I2C.onclick = function(evt) {
		modal.style.display = "block";
		document.getElementById("modalText").innerHTML = "Topic: SensorHub/I2C Message: string"
	}
	
	span.onclick = function() {
		modal.style.display = "none";
	}

	adcSlider.oninput = function() {
		adcOutput.innerHTML = adcSlider.value + " ms";
	}


	adcButton.onclick = function() {
		if (adcButton.checked){
				adcSlider.removeAttribute('disabled');
				adcOutput.innerHTML = adcSlider.value + " ms";
		}
		else{
				adcSlider.setAttribute('disabled', true);
				adcOutput.innerHTML = ""
		}
	}

</script>


</body>
</html>

